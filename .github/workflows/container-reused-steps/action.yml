name: Reusable container workflow
description: Reusable container workflow for bgutil-ytdlp-pot-provider.

inputs:
  DOCKERHUB_USERNAME:
    description: DockerHub username for authentication
    required: true
  DOCKERHUB_TOKEN:
    description: DockerHub token for authentication
    required: true
  QUAY_USERNAME:
    description: Quay.io username for authentication
    required: true
  QUAY_TOKEN:
    description: Quay.io token for authentication
    required: true
  IMAGE_NAME:
    description: Name of the container image to build
    required: true
  CONTAINERFILE:
    description: Path to the Containerfile
    required: true
  NAME:
    description: Name of the binary to build (e.g., bgutil-pot-server, bgutil-pot-generate)
    required: true

runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Remove SELinux ,z flags from Containerfile for GitHub Actions
    - name: Prepare Containerfile for GitHub Actions
      shell: bash
      run: |
        cp "${{ inputs.CONTAINERFILE }}" "${{ inputs.CONTAINERFILE }}.github"
        sed -i 's/,z//g' "${{ inputs.CONTAINERFILE }}.github"
        echo "Modified Containerfile for GitHub Actions (removed SELinux ,z flags)"

    # Create a Access Token and save it as as Actions secret
    # https://hub.docker.com/settings/security
    # DOCKERHUB_USERNAME
    # DOCKERHUB_TOKEN
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.DOCKERHUB_USERNAME }}
        password: ${{ inputs.DOCKERHUB_TOKEN }}

    # You may need to manage write and read access of GitHub Actions for repositories in the container settings.
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Login to Quay Container Registry
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ inputs.QUAY_USERNAME }}
        password: ${{ inputs.QUAY_TOKEN }}

    - name: Container meta:${{ github.ref_name }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.DOCKERHUB_USERNAME }}/${{ inputs.IMAGE_NAME }},ghcr.io/${{ github.repository_owner }}/${{ inputs.IMAGE_NAME }},quay.io/${{ github.repository_owner }}/${{ inputs.IMAGE_NAME }}
        tags: |
          ${{ github.ref_name }}
          latest

    - name: Build and push
      id: build_push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.CONTAINERFILE }}.github
        push: true
        target: final
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ github.ref_name }}
          RELEASE=${{ github.run_number }}
          NAME=${{ inputs.NAME }}
        platforms: linux/amd64,linux/arm64
        # Cache to registry instead of gha to avoid the capacity limit.
        cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.IMAGE_NAME }}:cache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.IMAGE_NAME }}:cache,mode=max
        sbom: true
        provenance: true

    # Add SLSA build-provenance attestations for each registry
    - name: Attest GitHub Container Registry image
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.IMAGE_NAME }}
        subject-digest: ${{ steps.build_push.outputs.digest }}

    - name: Attest Docker Hub image
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: index.docker.io/${{ inputs.DOCKERHUB_USERNAME }}/${{ inputs.IMAGE_NAME }}
        subject-digest: ${{ steps.build_push.outputs.digest }}

    - name: Attest Quay image
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: quay.io/${{ github.repository_owner }}/${{ inputs.IMAGE_NAME }}
        subject-digest: ${{ steps.build_push.outputs.digest }}
